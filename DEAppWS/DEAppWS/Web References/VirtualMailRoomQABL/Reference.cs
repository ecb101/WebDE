//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace DEAppWS.VirtualMailRoomQABL {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VirtualMailRoomQABLSoap", Namespace="http://tempuri.org/")]
    public partial class VirtualMailRoomQABL : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback selectBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectSCACOperationCompleted;
        
        private System.Threading.SendOrPostCallback deactivateBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowBatchStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VirtualMailRoomQABL() {
            this.Url = global::DEAppWS.Properties.Settings.Default.DEAppWS_VirtualMailRoomQABL_VirtualMailRoomQABL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event selectBatchesCompletedEventHandler selectBatchesCompleted;
        
        /// <remarks/>
        public event selectClientCompletedEventHandler selectClientCompleted;
        
        /// <remarks/>
        public event selectSCACCompletedEventHandler selectSCACCompleted;
        
        /// <remarks/>
        public event deactivateBatchCompletedEventHandler deactivateBatchCompleted;
        
        /// <remarks/>
        public event isAllowBatchStartCompletedEventHandler isAllowBatchStartCompleted;
        
        /// <remarks/>
        public event isAllowEditCompletedEventHandler isAllowEditCompleted;
        
        /// <remarks/>
        public event updateStatusCompletedEventHandler updateStatusCompleted;
        
        /// <remarks/>
        public event updateBatchCompletedEventHandler updateBatchCompleted;
        
        /// <remarks/>
        public event GetServerDateCompletedEventHandler GetServerDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectBatches", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectBatches() {
            object[] results = this.Invoke("selectBatches", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectBatchesAsync() {
            this.selectBatchesAsync(null);
        }
        
        /// <remarks/>
        public void selectBatchesAsync(object userState) {
            if ((this.selectBatchesOperationCompleted == null)) {
                this.selectBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectBatchesOperationCompleted);
            }
            this.InvokeAsync("selectBatches", new object[0], this.selectBatchesOperationCompleted, userState);
        }
        
        private void OnselectBatchesOperationCompleted(object arg) {
            if ((this.selectBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectBatchesCompleted(this, new selectBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectClient() {
            object[] results = this.Invoke("selectClient", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectClientAsync() {
            this.selectClientAsync(null);
        }
        
        /// <remarks/>
        public void selectClientAsync(object userState) {
            if ((this.selectClientOperationCompleted == null)) {
                this.selectClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectClientOperationCompleted);
            }
            this.InvokeAsync("selectClient", new object[0], this.selectClientOperationCompleted, userState);
        }
        
        private void OnselectClientOperationCompleted(object arg) {
            if ((this.selectClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectClientCompleted(this, new selectClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectSCAC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectSCAC() {
            object[] results = this.Invoke("selectSCAC", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectSCACAsync() {
            this.selectSCACAsync(null);
        }
        
        /// <remarks/>
        public void selectSCACAsync(object userState) {
            if ((this.selectSCACOperationCompleted == null)) {
                this.selectSCACOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectSCACOperationCompleted);
            }
            this.InvokeAsync("selectSCAC", new object[0], this.selectSCACOperationCompleted, userState);
        }
        
        private void OnselectSCACOperationCompleted(object arg) {
            if ((this.selectSCACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectSCACCompleted(this, new selectSCACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deactivateBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deactivateBatch(string reason, string batchNumber, string systemUserName, string systemMachineName) {
            object[] results = this.Invoke("deactivateBatch", new object[] {
                        reason,
                        batchNumber,
                        systemUserName,
                        systemMachineName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deactivateBatchAsync(string reason, string batchNumber, string systemUserName, string systemMachineName) {
            this.deactivateBatchAsync(reason, batchNumber, systemUserName, systemMachineName, null);
        }
        
        /// <remarks/>
        public void deactivateBatchAsync(string reason, string batchNumber, string systemUserName, string systemMachineName, object userState) {
            if ((this.deactivateBatchOperationCompleted == null)) {
                this.deactivateBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeactivateBatchOperationCompleted);
            }
            this.InvokeAsync("deactivateBatch", new object[] {
                        reason,
                        batchNumber,
                        systemUserName,
                        systemMachineName}, this.deactivateBatchOperationCompleted, userState);
        }
        
        private void OndeactivateBatchOperationCompleted(object arg) {
            if ((this.deactivateBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deactivateBatchCompleted(this, new deactivateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowBatchStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowBatchStart(string batCtrlNum) {
            object[] results = this.Invoke("isAllowBatchStart", new object[] {
                        batCtrlNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowBatchStartAsync(string batCtrlNum) {
            this.isAllowBatchStartAsync(batCtrlNum, null);
        }
        
        /// <remarks/>
        public void isAllowBatchStartAsync(string batCtrlNum, object userState) {
            if ((this.isAllowBatchStartOperationCompleted == null)) {
                this.isAllowBatchStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowBatchStartOperationCompleted);
            }
            this.InvokeAsync("isAllowBatchStart", new object[] {
                        batCtrlNum}, this.isAllowBatchStartOperationCompleted, userState);
        }
        
        private void OnisAllowBatchStartOperationCompleted(object arg) {
            if ((this.isAllowBatchStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowBatchStartCompleted(this, new isAllowBatchStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowEdit(string batCtrlNum) {
            object[] results = this.Invoke("isAllowEdit", new object[] {
                        batCtrlNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowEditAsync(string batCtrlNum) {
            this.isAllowEditAsync(batCtrlNum, null);
        }
        
        /// <remarks/>
        public void isAllowEditAsync(string batCtrlNum, object userState) {
            if ((this.isAllowEditOperationCompleted == null)) {
                this.isAllowEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowEditOperationCompleted);
            }
            this.InvokeAsync("isAllowEdit", new object[] {
                        batCtrlNum}, this.isAllowEditOperationCompleted, userState);
        }
        
        private void OnisAllowEditOperationCompleted(object arg) {
            if ((this.isAllowEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowEditCompleted(this, new isAllowEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateStatus(string batCtrlNum, string status) {
            object[] results = this.Invoke("updateStatus", new object[] {
                        batCtrlNum,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateStatusAsync(string batCtrlNum, string status) {
            this.updateStatusAsync(batCtrlNum, status, null);
        }
        
        /// <remarks/>
        public void updateStatusAsync(string batCtrlNum, string status, object userState) {
            if ((this.updateStatusOperationCompleted == null)) {
                this.updateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateStatusOperationCompleted);
            }
            this.InvokeAsync("updateStatus", new object[] {
                        batCtrlNum,
                        status}, this.updateStatusOperationCompleted, userState);
        }
        
        private void OnupdateStatusOperationCompleted(object arg) {
            if ((this.updateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateStatusCompleted(this, new updateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateBatch(string Bat_Ctrl_Num, string OwnerKey, string VendBatKey, string FBCount, bool isProduction, string CarrierName, string ICS, string imageFilePath, string SCAC, string systemUserName, string systemMachineName) {
            object[] results = this.Invoke("updateBatch", new object[] {
                        Bat_Ctrl_Num,
                        OwnerKey,
                        VendBatKey,
                        FBCount,
                        isProduction,
                        CarrierName,
                        ICS,
                        imageFilePath,
                        SCAC,
                        systemUserName,
                        systemMachineName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateBatchAsync(string Bat_Ctrl_Num, string OwnerKey, string VendBatKey, string FBCount, bool isProduction, string CarrierName, string ICS, string imageFilePath, string SCAC, string systemUserName, string systemMachineName) {
            this.updateBatchAsync(Bat_Ctrl_Num, OwnerKey, VendBatKey, FBCount, isProduction, CarrierName, ICS, imageFilePath, SCAC, systemUserName, systemMachineName, null);
        }
        
        /// <remarks/>
        public void updateBatchAsync(string Bat_Ctrl_Num, string OwnerKey, string VendBatKey, string FBCount, bool isProduction, string CarrierName, string ICS, string imageFilePath, string SCAC, string systemUserName, string systemMachineName, object userState) {
            if ((this.updateBatchOperationCompleted == null)) {
                this.updateBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBatchOperationCompleted);
            }
            this.InvokeAsync("updateBatch", new object[] {
                        Bat_Ctrl_Num,
                        OwnerKey,
                        VendBatKey,
                        FBCount,
                        isProduction,
                        CarrierName,
                        ICS,
                        imageFilePath,
                        SCAC,
                        systemUserName,
                        systemMachineName}, this.updateBatchOperationCompleted, userState);
        }
        
        private void OnupdateBatchOperationCompleted(object arg) {
            if ((this.updateBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBatchCompleted(this, new updateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDate() {
            object[] results = this.Invoke("GetServerDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateAsync() {
            this.GetServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateAsync(object userState) {
            if ((this.GetServerDateOperationCompleted == null)) {
                this.GetServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateOperationCompleted);
            }
            this.InvokeAsync("GetServerDate", new object[0], this.GetServerDateOperationCompleted, userState);
        }
        
        private void OnGetServerDateOperationCompleted(object arg) {
            if ((this.GetServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateCompleted(this, new GetServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectBatchesCompletedEventHandler(object sender, selectBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectClientCompletedEventHandler(object sender, selectClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectSCACCompletedEventHandler(object sender, selectSCACCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectSCACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectSCACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deactivateBatchCompletedEventHandler(object sender, deactivateBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deactivateBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deactivateBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowBatchStartCompletedEventHandler(object sender, isAllowBatchStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowBatchStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowBatchStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowEditCompletedEventHandler(object sender, isAllowEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateStatusCompletedEventHandler(object sender, updateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateBatchCompletedEventHandler(object sender, updateBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServerDateCompletedEventHandler(object sender, GetServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591