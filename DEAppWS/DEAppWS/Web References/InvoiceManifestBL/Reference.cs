//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace DEAppWS.InvoiceManifestBL {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InvoiceManifestBLSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class InvoiceManifestBL : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback selectInvoiceManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveInvoiceManifestOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertImagesManifestedOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditTrailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InvoiceManifestBL() {
            this.Url = global::DEAppWS.Properties.Settings.Default.DEAppWS_InvoiceManifestBL_InvoiceManifestBL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event selectInvoiceManifestCompletedEventHandler selectInvoiceManifestCompleted;
        
        /// <remarks/>
        public event saveInvoiceManifestCompletedEventHandler saveInvoiceManifestCompleted;
        
        /// <remarks/>
        public event selectClientCompletedEventHandler selectClientCompleted;
        
        /// <remarks/>
        public event selectLanguageCompletedEventHandler selectLanguageCompleted;
        
        /// <remarks/>
        public event insertImagesManifestedCompletedEventHandler insertImagesManifestedCompleted;
        
        /// <remarks/>
        public event auditTrailCompletedEventHandler auditTrailCompleted;
        
        /// <remarks/>
        public event GetServerDateCompletedEventHandler GetServerDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectInvoiceManifest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectInvoiceManifest(string ImgDocID) {
            object[] results = this.Invoke("selectInvoiceManifest", new object[] {
                        ImgDocID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectInvoiceManifestAsync(string ImgDocID) {
            this.selectInvoiceManifestAsync(ImgDocID, null);
        }
        
        /// <remarks/>
        public void selectInvoiceManifestAsync(string ImgDocID, object userState) {
            if ((this.selectInvoiceManifestOperationCompleted == null)) {
                this.selectInvoiceManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectInvoiceManifestOperationCompleted);
            }
            this.InvokeAsync("selectInvoiceManifest", new object[] {
                        ImgDocID}, this.selectInvoiceManifestOperationCompleted, userState);
        }
        
        private void OnselectInvoiceManifestOperationCompleted(object arg) {
            if ((this.selectInvoiceManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectInvoiceManifestCompleted(this, new selectInvoiceManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveInvoiceManifest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveInvoiceManifest(System.Data.DataSet ds, string siteID) {
            object[] results = this.Invoke("saveInvoiceManifest", new object[] {
                        ds,
                        siteID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveInvoiceManifestAsync(System.Data.DataSet ds, string siteID) {
            this.saveInvoiceManifestAsync(ds, siteID, null);
        }
        
        /// <remarks/>
        public void saveInvoiceManifestAsync(System.Data.DataSet ds, string siteID, object userState) {
            if ((this.saveInvoiceManifestOperationCompleted == null)) {
                this.saveInvoiceManifestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveInvoiceManifestOperationCompleted);
            }
            this.InvokeAsync("saveInvoiceManifest", new object[] {
                        ds,
                        siteID}, this.saveInvoiceManifestOperationCompleted, userState);
        }
        
        private void OnsaveInvoiceManifestOperationCompleted(object arg) {
            if ((this.saveInvoiceManifestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveInvoiceManifestCompleted(this, new saveInvoiceManifestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] selectClient() {
            object[] results = this.Invoke("selectClient", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void selectClientAsync() {
            this.selectClientAsync(null);
        }
        
        /// <remarks/>
        public void selectClientAsync(object userState) {
            if ((this.selectClientOperationCompleted == null)) {
                this.selectClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectClientOperationCompleted);
            }
            this.InvokeAsync("selectClient", new object[0], this.selectClientOperationCompleted, userState);
        }
        
        private void OnselectClientOperationCompleted(object arg) {
            if ((this.selectClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectClientCompleted(this, new selectClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] selectLanguage() {
            object[] results = this.Invoke("selectLanguage", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void selectLanguageAsync() {
            this.selectLanguageAsync(null);
        }
        
        /// <remarks/>
        public void selectLanguageAsync(object userState) {
            if ((this.selectLanguageOperationCompleted == null)) {
                this.selectLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectLanguageOperationCompleted);
            }
            this.InvokeAsync("selectLanguage", new object[0], this.selectLanguageOperationCompleted, userState);
        }
        
        private void OnselectLanguageOperationCompleted(object arg) {
            if ((this.selectLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectLanguageCompleted(this, new selectLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertImagesManifested", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool insertImagesManifested(string from, string to) {
            object[] results = this.Invoke("insertImagesManifested", new object[] {
                        from,
                        to});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void insertImagesManifestedAsync(string from, string to) {
            this.insertImagesManifestedAsync(from, to, null);
        }
        
        /// <remarks/>
        public void insertImagesManifestedAsync(string from, string to, object userState) {
            if ((this.insertImagesManifestedOperationCompleted == null)) {
                this.insertImagesManifestedOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertImagesManifestedOperationCompleted);
            }
            this.InvokeAsync("insertImagesManifested", new object[] {
                        from,
                        to}, this.insertImagesManifestedOperationCompleted, userState);
        }
        
        private void OninsertImagesManifestedOperationCompleted(object arg) {
            if ((this.insertImagesManifestedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertImagesManifestedCompleted(this, new insertImagesManifestedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/auditTrail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void auditTrail(string ImageID, string descriptionID, string systemUserName) {
            this.Invoke("auditTrail", new object[] {
                        ImageID,
                        descriptionID,
                        systemUserName});
        }
        
        /// <remarks/>
        public void auditTrailAsync(string ImageID, string descriptionID, string systemUserName) {
            this.auditTrailAsync(ImageID, descriptionID, systemUserName, null);
        }
        
        /// <remarks/>
        public void auditTrailAsync(string ImageID, string descriptionID, string systemUserName, object userState) {
            if ((this.auditTrailOperationCompleted == null)) {
                this.auditTrailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditTrailOperationCompleted);
            }
            this.InvokeAsync("auditTrail", new object[] {
                        ImageID,
                        descriptionID,
                        systemUserName}, this.auditTrailOperationCompleted, userState);
        }
        
        private void OnauditTrailOperationCompleted(object arg) {
            if ((this.auditTrailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditTrailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDate() {
            object[] results = this.Invoke("GetServerDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateAsync() {
            this.GetServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateAsync(object userState) {
            if ((this.GetServerDateOperationCompleted == null)) {
                this.GetServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateOperationCompleted);
            }
            this.InvokeAsync("GetServerDate", new object[0], this.GetServerDateOperationCompleted, userState);
        }
        
        private void OnGetServerDateOperationCompleted(object arg) {
            if ((this.GetServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateCompleted(this, new GetServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectInvoiceManifestCompletedEventHandler(object sender, selectInvoiceManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectInvoiceManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectInvoiceManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void saveInvoiceManifestCompletedEventHandler(object sender, saveInvoiceManifestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveInvoiceManifestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveInvoiceManifestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectClientCompletedEventHandler(object sender, selectClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectLanguageCompletedEventHandler(object sender, selectLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void insertImagesManifestedCompletedEventHandler(object sender, insertImagesManifestedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertImagesManifestedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertImagesManifestedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void auditTrailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServerDateCompletedEventHandler(object sender, GetServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591