//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace DEAppWS.DataEntryQABL {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataEntryQABLSoap", Namespace="http://tempuri.org/")]
    public partial class DataEntryQABL : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback selectBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectKeyIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectDEFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowBatchStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback startBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowUserEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendForReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveBatchXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectBatchXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectBatchEphesoftXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveShipperConsigneeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectAlphaNumericKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectCustRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback auditTrailBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowQAOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowUserQAOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAllowQAEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback startReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectQAConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback completeReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback graphDiffQAXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback graphDiffTrainerXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataEntryQABL() {
            this.Url = global::DEAppWS.Properties.Settings.Default.DEAppWS_localhost_DataEntryQABL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event selectBatchesCompletedEventHandler selectBatchesCompleted;
        
        /// <remarks/>
        public event selectKeyIdentifierCompletedEventHandler selectKeyIdentifierCompleted;
        
        /// <remarks/>
        public event selectDEFormCompletedEventHandler selectDEFormCompleted;
        
        /// <remarks/>
        public event isAllowBatchStartCompletedEventHandler isAllowBatchStartCompleted;
        
        /// <remarks/>
        public event isAllowEditCompletedEventHandler isAllowEditCompleted;
        
        /// <remarks/>
        public event startBatchCompletedEventHandler startBatchCompleted;
        
        /// <remarks/>
        public event isAllowUserEntryCompletedEventHandler isAllowUserEntryCompleted;
        
        /// <remarks/>
        public event sendForReviewCompletedEventHandler sendForReviewCompleted;
        
        /// <remarks/>
        public event updateStatusCompletedEventHandler updateStatusCompleted;
        
        /// <remarks/>
        public event saveBatchXMLCompletedEventHandler saveBatchXMLCompleted;
        
        /// <remarks/>
        public event selectBatchXMLCompletedEventHandler selectBatchXMLCompleted;
        
        /// <remarks/>
        public event selectBatchEphesoftXMLCompletedEventHandler selectBatchEphesoftXMLCompleted;
        
        /// <remarks/>
        public event saveShipperConsigneeInfoCompletedEventHandler saveShipperConsigneeInfoCompleted;
        
        /// <remarks/>
        public event selectAlphaNumericKeyCompletedEventHandler selectAlphaNumericKeyCompleted;
        
        /// <remarks/>
        public event selectCustRefCompletedEventHandler selectCustRefCompleted;
        
        /// <remarks/>
        public event auditTrailBatchCompletedEventHandler auditTrailBatchCompleted;
        
        /// <remarks/>
        public event isAllowQACompletedEventHandler isAllowQACompleted;
        
        /// <remarks/>
        public event isAllowUserQACompletedEventHandler isAllowUserQACompleted;
        
        /// <remarks/>
        public event isAllowQAEditCompletedEventHandler isAllowQAEditCompleted;
        
        /// <remarks/>
        public event startReviewCompletedEventHandler startReviewCompleted;
        
        /// <remarks/>
        public event selectQAConfigCompletedEventHandler selectQAConfigCompleted;
        
        /// <remarks/>
        public event completeReviewCompletedEventHandler completeReviewCompleted;
        
        /// <remarks/>
        public event graphDiffQAXMLCompletedEventHandler graphDiffQAXMLCompleted;
        
        /// <remarks/>
        public event graphDiffTrainerXMLCompletedEventHandler graphDiffTrainerXMLCompleted;
        
        /// <remarks/>
        public event deleteObjectCompletedEventHandler deleteObjectCompleted;
        
        /// <remarks/>
        public event InsertCompletedEventHandler InsertCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event SelectAllCompletedEventHandler SelectAllCompleted;
        
        /// <remarks/>
        public event GetServerDateCompletedEventHandler GetServerDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectBatches", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectBatches(object FormMode) {
            object[] results = this.Invoke("selectBatches", new object[] {
                        FormMode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectBatchesAsync(object FormMode) {
            this.selectBatchesAsync(FormMode, null);
        }
        
        /// <remarks/>
        public void selectBatchesAsync(object FormMode, object userState) {
            if ((this.selectBatchesOperationCompleted == null)) {
                this.selectBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectBatchesOperationCompleted);
            }
            this.InvokeAsync("selectBatches", new object[] {
                        FormMode}, this.selectBatchesOperationCompleted, userState);
        }
        
        private void OnselectBatchesOperationCompleted(object arg) {
            if ((this.selectBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectBatchesCompleted(this, new selectBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectKeyIdentifier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectKeyIdentifier() {
            object[] results = this.Invoke("selectKeyIdentifier", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectKeyIdentifierAsync() {
            this.selectKeyIdentifierAsync(null);
        }
        
        /// <remarks/>
        public void selectKeyIdentifierAsync(object userState) {
            if ((this.selectKeyIdentifierOperationCompleted == null)) {
                this.selectKeyIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectKeyIdentifierOperationCompleted);
            }
            this.InvokeAsync("selectKeyIdentifier", new object[0], this.selectKeyIdentifierOperationCompleted, userState);
        }
        
        private void OnselectKeyIdentifierOperationCompleted(object arg) {
            if ((this.selectKeyIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectKeyIdentifierCompleted(this, new selectKeyIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectDEForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string selectDEForm(string batCtrlNum, string OwnerKey, string SCAC) {
            object[] results = this.Invoke("selectDEForm", new object[] {
                        batCtrlNum,
                        OwnerKey,
                        SCAC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void selectDEFormAsync(string batCtrlNum, string OwnerKey, string SCAC) {
            this.selectDEFormAsync(batCtrlNum, OwnerKey, SCAC, null);
        }
        
        /// <remarks/>
        public void selectDEFormAsync(string batCtrlNum, string OwnerKey, string SCAC, object userState) {
            if ((this.selectDEFormOperationCompleted == null)) {
                this.selectDEFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectDEFormOperationCompleted);
            }
            this.InvokeAsync("selectDEForm", new object[] {
                        batCtrlNum,
                        OwnerKey,
                        SCAC}, this.selectDEFormOperationCompleted, userState);
        }
        
        private void OnselectDEFormOperationCompleted(object arg) {
            if ((this.selectDEFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectDEFormCompleted(this, new selectDEFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowBatchStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowBatchStart(string batCtrlNum) {
            object[] results = this.Invoke("isAllowBatchStart", new object[] {
                        batCtrlNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowBatchStartAsync(string batCtrlNum) {
            this.isAllowBatchStartAsync(batCtrlNum, null);
        }
        
        /// <remarks/>
        public void isAllowBatchStartAsync(string batCtrlNum, object userState) {
            if ((this.isAllowBatchStartOperationCompleted == null)) {
                this.isAllowBatchStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowBatchStartOperationCompleted);
            }
            this.InvokeAsync("isAllowBatchStart", new object[] {
                        batCtrlNum}, this.isAllowBatchStartOperationCompleted, userState);
        }
        
        private void OnisAllowBatchStartOperationCompleted(object arg) {
            if ((this.isAllowBatchStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowBatchStartCompleted(this, new isAllowBatchStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowEdit(string batCtrlNum, string systemUserName) {
            object[] results = this.Invoke("isAllowEdit", new object[] {
                        batCtrlNum,
                        systemUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowEditAsync(string batCtrlNum, string systemUserName) {
            this.isAllowEditAsync(batCtrlNum, systemUserName, null);
        }
        
        /// <remarks/>
        public void isAllowEditAsync(string batCtrlNum, string systemUserName, object userState) {
            if ((this.isAllowEditOperationCompleted == null)) {
                this.isAllowEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowEditOperationCompleted);
            }
            this.InvokeAsync("isAllowEdit", new object[] {
                        batCtrlNum,
                        systemUserName}, this.isAllowEditOperationCompleted, userState);
        }
        
        private void OnisAllowEditOperationCompleted(object arg) {
            if ((this.isAllowEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowEditCompleted(this, new isAllowEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/startBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool startBatch(string batCtrlNum, string UserInitials) {
            object[] results = this.Invoke("startBatch", new object[] {
                        batCtrlNum,
                        UserInitials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void startBatchAsync(string batCtrlNum, string UserInitials) {
            this.startBatchAsync(batCtrlNum, UserInitials, null);
        }
        
        /// <remarks/>
        public void startBatchAsync(string batCtrlNum, string UserInitials, object userState) {
            if ((this.startBatchOperationCompleted == null)) {
                this.startBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartBatchOperationCompleted);
            }
            this.InvokeAsync("startBatch", new object[] {
                        batCtrlNum,
                        UserInitials}, this.startBatchOperationCompleted, userState);
        }
        
        private void OnstartBatchOperationCompleted(object arg) {
            if ((this.startBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startBatchCompleted(this, new startBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowUserEntry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowUserEntry(string batCtrlNum, string UserInitials) {
            object[] results = this.Invoke("isAllowUserEntry", new object[] {
                        batCtrlNum,
                        UserInitials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowUserEntryAsync(string batCtrlNum, string UserInitials) {
            this.isAllowUserEntryAsync(batCtrlNum, UserInitials, null);
        }
        
        /// <remarks/>
        public void isAllowUserEntryAsync(string batCtrlNum, string UserInitials, object userState) {
            if ((this.isAllowUserEntryOperationCompleted == null)) {
                this.isAllowUserEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowUserEntryOperationCompleted);
            }
            this.InvokeAsync("isAllowUserEntry", new object[] {
                        batCtrlNum,
                        UserInitials}, this.isAllowUserEntryOperationCompleted, userState);
        }
        
        private void OnisAllowUserEntryOperationCompleted(object arg) {
            if ((this.isAllowUserEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowUserEntryCompleted(this, new isAllowUserEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendForReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendForReview(string batCtrlNum) {
            object[] results = this.Invoke("sendForReview", new object[] {
                        batCtrlNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendForReviewAsync(string batCtrlNum) {
            this.sendForReviewAsync(batCtrlNum, null);
        }
        
        /// <remarks/>
        public void sendForReviewAsync(string batCtrlNum, object userState) {
            if ((this.sendForReviewOperationCompleted == null)) {
                this.sendForReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendForReviewOperationCompleted);
            }
            this.InvokeAsync("sendForReview", new object[] {
                        batCtrlNum}, this.sendForReviewOperationCompleted, userState);
        }
        
        private void OnsendForReviewOperationCompleted(object arg) {
            if ((this.sendForReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendForReviewCompleted(this, new sendForReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateStatus(string batCtrlNum, string status) {
            object[] results = this.Invoke("updateStatus", new object[] {
                        batCtrlNum,
                        status});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateStatusAsync(string batCtrlNum, string status) {
            this.updateStatusAsync(batCtrlNum, status, null);
        }
        
        /// <remarks/>
        public void updateStatusAsync(string batCtrlNum, string status, object userState) {
            if ((this.updateStatusOperationCompleted == null)) {
                this.updateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateStatusOperationCompleted);
            }
            this.InvokeAsync("updateStatus", new object[] {
                        batCtrlNum,
                        status}, this.updateStatusOperationCompleted, userState);
        }
        
        private void OnupdateStatusOperationCompleted(object arg) {
            if ((this.updateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateStatusCompleted(this, new updateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveBatchXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool saveBatchXML(System.Data.DataSet dsBatch, string MXXDatabase, object FormMode) {
            object[] results = this.Invoke("saveBatchXML", new object[] {
                        dsBatch,
                        MXXDatabase,
                        FormMode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void saveBatchXMLAsync(System.Data.DataSet dsBatch, string MXXDatabase, object FormMode) {
            this.saveBatchXMLAsync(dsBatch, MXXDatabase, FormMode, null);
        }
        
        /// <remarks/>
        public void saveBatchXMLAsync(System.Data.DataSet dsBatch, string MXXDatabase, object FormMode, object userState) {
            if ((this.saveBatchXMLOperationCompleted == null)) {
                this.saveBatchXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveBatchXMLOperationCompleted);
            }
            this.InvokeAsync("saveBatchXML", new object[] {
                        dsBatch,
                        MXXDatabase,
                        FormMode}, this.saveBatchXMLOperationCompleted, userState);
        }
        
        private void OnsaveBatchXMLOperationCompleted(object arg) {
            if ((this.saveBatchXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveBatchXMLCompleted(this, new saveBatchXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectBatchXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectBatchXML(string MXXDatabase, object FormMode) {
            object[] results = this.Invoke("selectBatchXML", new object[] {
                        MXXDatabase,
                        FormMode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectBatchXMLAsync(string MXXDatabase, object FormMode) {
            this.selectBatchXMLAsync(MXXDatabase, FormMode, null);
        }
        
        /// <remarks/>
        public void selectBatchXMLAsync(string MXXDatabase, object FormMode, object userState) {
            if ((this.selectBatchXMLOperationCompleted == null)) {
                this.selectBatchXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectBatchXMLOperationCompleted);
            }
            this.InvokeAsync("selectBatchXML", new object[] {
                        MXXDatabase,
                        FormMode}, this.selectBatchXMLOperationCompleted, userState);
        }
        
        private void OnselectBatchXMLOperationCompleted(object arg) {
            if ((this.selectBatchXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectBatchXMLCompleted(this, new selectBatchXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectBatchEphesoftXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectBatchEphesoftXML(string MXXDatabase) {
            object[] results = this.Invoke("selectBatchEphesoftXML", new object[] {
                        MXXDatabase});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectBatchEphesoftXMLAsync(string MXXDatabase) {
            this.selectBatchEphesoftXMLAsync(MXXDatabase, null);
        }
        
        /// <remarks/>
        public void selectBatchEphesoftXMLAsync(string MXXDatabase, object userState) {
            if ((this.selectBatchEphesoftXMLOperationCompleted == null)) {
                this.selectBatchEphesoftXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectBatchEphesoftXMLOperationCompleted);
            }
            this.InvokeAsync("selectBatchEphesoftXML", new object[] {
                        MXXDatabase}, this.selectBatchEphesoftXMLOperationCompleted, userState);
        }
        
        private void OnselectBatchEphesoftXMLOperationCompleted(object arg) {
            if ((this.selectBatchEphesoftXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectBatchEphesoftXMLCompleted(this, new selectBatchEphesoftXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveShipperConsigneeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveShipperConsigneeInfo(System.Data.DataTable fb) {
            this.Invoke("saveShipperConsigneeInfo", new object[] {
                        fb});
        }
        
        /// <remarks/>
        public void saveShipperConsigneeInfoAsync(System.Data.DataTable fb) {
            this.saveShipperConsigneeInfoAsync(fb, null);
        }
        
        /// <remarks/>
        public void saveShipperConsigneeInfoAsync(System.Data.DataTable fb, object userState) {
            if ((this.saveShipperConsigneeInfoOperationCompleted == null)) {
                this.saveShipperConsigneeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveShipperConsigneeInfoOperationCompleted);
            }
            this.InvokeAsync("saveShipperConsigneeInfo", new object[] {
                        fb}, this.saveShipperConsigneeInfoOperationCompleted, userState);
        }
        
        private void OnsaveShipperConsigneeInfoOperationCompleted(object arg) {
            if ((this.saveShipperConsigneeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveShipperConsigneeInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectAlphaNumericKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectAlphaNumericKey() {
            object[] results = this.Invoke("selectAlphaNumericKey", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectAlphaNumericKeyAsync() {
            this.selectAlphaNumericKeyAsync(null);
        }
        
        /// <remarks/>
        public void selectAlphaNumericKeyAsync(object userState) {
            if ((this.selectAlphaNumericKeyOperationCompleted == null)) {
                this.selectAlphaNumericKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectAlphaNumericKeyOperationCompleted);
            }
            this.InvokeAsync("selectAlphaNumericKey", new object[0], this.selectAlphaNumericKeyOperationCompleted, userState);
        }
        
        private void OnselectAlphaNumericKeyOperationCompleted(object arg) {
            if ((this.selectAlphaNumericKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectAlphaNumericKeyCompleted(this, new selectAlphaNumericKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectCustRef", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectCustRef() {
            object[] results = this.Invoke("selectCustRef", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectCustRefAsync() {
            this.selectCustRefAsync(null);
        }
        
        /// <remarks/>
        public void selectCustRefAsync(object userState) {
            if ((this.selectCustRefOperationCompleted == null)) {
                this.selectCustRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectCustRefOperationCompleted);
            }
            this.InvokeAsync("selectCustRef", new object[0], this.selectCustRefOperationCompleted, userState);
        }
        
        private void OnselectCustRefOperationCompleted(object arg) {
            if ((this.selectCustRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectCustRefCompleted(this, new selectCustRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/auditTrailBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void auditTrailBatch(string BatCtrlNum, string descriptionID, string systemUserName) {
            this.Invoke("auditTrailBatch", new object[] {
                        BatCtrlNum,
                        descriptionID,
                        systemUserName});
        }
        
        /// <remarks/>
        public void auditTrailBatchAsync(string BatCtrlNum, string descriptionID, string systemUserName) {
            this.auditTrailBatchAsync(BatCtrlNum, descriptionID, systemUserName, null);
        }
        
        /// <remarks/>
        public void auditTrailBatchAsync(string BatCtrlNum, string descriptionID, string systemUserName, object userState) {
            if ((this.auditTrailBatchOperationCompleted == null)) {
                this.auditTrailBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauditTrailBatchOperationCompleted);
            }
            this.InvokeAsync("auditTrailBatch", new object[] {
                        BatCtrlNum,
                        descriptionID,
                        systemUserName}, this.auditTrailBatchOperationCompleted, userState);
        }
        
        private void OnauditTrailBatchOperationCompleted(object arg) {
            if ((this.auditTrailBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.auditTrailBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowQA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowQA(string batCtrlNum) {
            object[] results = this.Invoke("isAllowQA", new object[] {
                        batCtrlNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowQAAsync(string batCtrlNum) {
            this.isAllowQAAsync(batCtrlNum, null);
        }
        
        /// <remarks/>
        public void isAllowQAAsync(string batCtrlNum, object userState) {
            if ((this.isAllowQAOperationCompleted == null)) {
                this.isAllowQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowQAOperationCompleted);
            }
            this.InvokeAsync("isAllowQA", new object[] {
                        batCtrlNum}, this.isAllowQAOperationCompleted, userState);
        }
        
        private void OnisAllowQAOperationCompleted(object arg) {
            if ((this.isAllowQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowQACompleted(this, new isAllowQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowUserQA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowUserQA(string batCtrlNum, string UserInitials) {
            object[] results = this.Invoke("isAllowUserQA", new object[] {
                        batCtrlNum,
                        UserInitials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowUserQAAsync(string batCtrlNum, string UserInitials) {
            this.isAllowUserQAAsync(batCtrlNum, UserInitials, null);
        }
        
        /// <remarks/>
        public void isAllowUserQAAsync(string batCtrlNum, string UserInitials, object userState) {
            if ((this.isAllowUserQAOperationCompleted == null)) {
                this.isAllowUserQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowUserQAOperationCompleted);
            }
            this.InvokeAsync("isAllowUserQA", new object[] {
                        batCtrlNum,
                        UserInitials}, this.isAllowUserQAOperationCompleted, userState);
        }
        
        private void OnisAllowUserQAOperationCompleted(object arg) {
            if ((this.isAllowUserQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowUserQACompleted(this, new isAllowUserQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isAllowQAEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isAllowQAEdit(string batCtrlNum, string systemUserName) {
            object[] results = this.Invoke("isAllowQAEdit", new object[] {
                        batCtrlNum,
                        systemUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isAllowQAEditAsync(string batCtrlNum, string systemUserName) {
            this.isAllowQAEditAsync(batCtrlNum, systemUserName, null);
        }
        
        /// <remarks/>
        public void isAllowQAEditAsync(string batCtrlNum, string systemUserName, object userState) {
            if ((this.isAllowQAEditOperationCompleted == null)) {
                this.isAllowQAEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAllowQAEditOperationCompleted);
            }
            this.InvokeAsync("isAllowQAEdit", new object[] {
                        batCtrlNum,
                        systemUserName}, this.isAllowQAEditOperationCompleted, userState);
        }
        
        private void OnisAllowQAEditOperationCompleted(object arg) {
            if ((this.isAllowQAEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAllowQAEditCompleted(this, new isAllowQAEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/startReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool startReview(string batCtrlNum, string UserInitials) {
            object[] results = this.Invoke("startReview", new object[] {
                        batCtrlNum,
                        UserInitials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void startReviewAsync(string batCtrlNum, string UserInitials) {
            this.startReviewAsync(batCtrlNum, UserInitials, null);
        }
        
        /// <remarks/>
        public void startReviewAsync(string batCtrlNum, string UserInitials, object userState) {
            if ((this.startReviewOperationCompleted == null)) {
                this.startReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartReviewOperationCompleted);
            }
            this.InvokeAsync("startReview", new object[] {
                        batCtrlNum,
                        UserInitials}, this.startReviewOperationCompleted, userState);
        }
        
        private void OnstartReviewOperationCompleted(object arg) {
            if ((this.startReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startReviewCompleted(this, new startReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectQAConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet selectQAConfig(string Owner_Key, string Vend_SCAC, string batCtrlNum) {
            object[] results = this.Invoke("selectQAConfig", new object[] {
                        Owner_Key,
                        Vend_SCAC,
                        batCtrlNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void selectQAConfigAsync(string Owner_Key, string Vend_SCAC, string batCtrlNum) {
            this.selectQAConfigAsync(Owner_Key, Vend_SCAC, batCtrlNum, null);
        }
        
        /// <remarks/>
        public void selectQAConfigAsync(string Owner_Key, string Vend_SCAC, string batCtrlNum, object userState) {
            if ((this.selectQAConfigOperationCompleted == null)) {
                this.selectQAConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectQAConfigOperationCompleted);
            }
            this.InvokeAsync("selectQAConfig", new object[] {
                        Owner_Key,
                        Vend_SCAC,
                        batCtrlNum}, this.selectQAConfigOperationCompleted, userState);
        }
        
        private void OnselectQAConfigOperationCompleted(object arg) {
            if ((this.selectQAConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectQAConfigCompleted(this, new selectQAConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/completeReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool completeReview(string batCtrlNum, string OwnerKey, string OwnerCode, int invoiceCount, int fbCount, int fbLineCount, bool isMultiCurrency, bool isFullQA, string UserInitials) {
            object[] results = this.Invoke("completeReview", new object[] {
                        batCtrlNum,
                        OwnerKey,
                        OwnerCode,
                        invoiceCount,
                        fbCount,
                        fbLineCount,
                        isMultiCurrency,
                        isFullQA,
                        UserInitials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void completeReviewAsync(string batCtrlNum, string OwnerKey, string OwnerCode, int invoiceCount, int fbCount, int fbLineCount, bool isMultiCurrency, bool isFullQA, string UserInitials) {
            this.completeReviewAsync(batCtrlNum, OwnerKey, OwnerCode, invoiceCount, fbCount, fbLineCount, isMultiCurrency, isFullQA, UserInitials, null);
        }
        
        /// <remarks/>
        public void completeReviewAsync(string batCtrlNum, string OwnerKey, string OwnerCode, int invoiceCount, int fbCount, int fbLineCount, bool isMultiCurrency, bool isFullQA, string UserInitials, object userState) {
            if ((this.completeReviewOperationCompleted == null)) {
                this.completeReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompleteReviewOperationCompleted);
            }
            this.InvokeAsync("completeReview", new object[] {
                        batCtrlNum,
                        OwnerKey,
                        OwnerCode,
                        invoiceCount,
                        fbCount,
                        fbLineCount,
                        isMultiCurrency,
                        isFullQA,
                        UserInitials}, this.completeReviewOperationCompleted, userState);
        }
        
        private void OncompleteReviewOperationCompleted(object arg) {
            if ((this.completeReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.completeReviewCompleted(this, new completeReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/graphDiffQAXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable graphDiffQAXML(string MXXDatabase, string MXXOwnerKey, string MXXSCAC, string siteID) {
            object[] results = this.Invoke("graphDiffQAXML", new object[] {
                        MXXDatabase,
                        MXXOwnerKey,
                        MXXSCAC,
                        siteID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void graphDiffQAXMLAsync(string MXXDatabase, string MXXOwnerKey, string MXXSCAC, string siteID) {
            this.graphDiffQAXMLAsync(MXXDatabase, MXXOwnerKey, MXXSCAC, siteID, null);
        }
        
        /// <remarks/>
        public void graphDiffQAXMLAsync(string MXXDatabase, string MXXOwnerKey, string MXXSCAC, string siteID, object userState) {
            if ((this.graphDiffQAXMLOperationCompleted == null)) {
                this.graphDiffQAXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngraphDiffQAXMLOperationCompleted);
            }
            this.InvokeAsync("graphDiffQAXML", new object[] {
                        MXXDatabase,
                        MXXOwnerKey,
                        MXXSCAC,
                        siteID}, this.graphDiffQAXMLOperationCompleted, userState);
        }
        
        private void OngraphDiffQAXMLOperationCompleted(object arg) {
            if ((this.graphDiffQAXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.graphDiffQAXMLCompleted(this, new graphDiffQAXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/graphDiffTrainerXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable graphDiffTrainerXML(string MXXDatabase, System.DateTime StartDate, string siteID) {
            object[] results = this.Invoke("graphDiffTrainerXML", new object[] {
                        MXXDatabase,
                        StartDate,
                        siteID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void graphDiffTrainerXMLAsync(string MXXDatabase, System.DateTime StartDate, string siteID) {
            this.graphDiffTrainerXMLAsync(MXXDatabase, StartDate, siteID, null);
        }
        
        /// <remarks/>
        public void graphDiffTrainerXMLAsync(string MXXDatabase, System.DateTime StartDate, string siteID, object userState) {
            if ((this.graphDiffTrainerXMLOperationCompleted == null)) {
                this.graphDiffTrainerXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngraphDiffTrainerXMLOperationCompleted);
            }
            this.InvokeAsync("graphDiffTrainerXML", new object[] {
                        MXXDatabase,
                        StartDate,
                        siteID}, this.graphDiffTrainerXMLOperationCompleted, userState);
        }
        
        private void OngraphDiffTrainerXMLOperationCompleted(object arg) {
            if ((this.graphDiffTrainerXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.graphDiffTrainerXMLCompleted(this, new graphDiffTrainerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteObject(string MXXDatabase) {
            object[] results = this.Invoke("deleteObject", new object[] {
                        MXXDatabase});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteObjectAsync(string MXXDatabase) {
            this.deleteObjectAsync(MXXDatabase, null);
        }
        
        /// <remarks/>
        public void deleteObjectAsync(string MXXDatabase, object userState) {
            if ((this.deleteObjectOperationCompleted == null)) {
                this.deleteObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteObjectOperationCompleted);
            }
            this.InvokeAsync("deleteObject", new object[] {
                        MXXDatabase}, this.deleteObjectOperationCompleted, userState);
        }
        
        private void OndeleteObjectOperationCompleted(object arg) {
            if ((this.deleteObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteObjectCompleted(this, new deleteObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insert(System.Data.DataTable dt) {
            object[] results = this.Invoke("Insert", new object[] {
                        dt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAsync(System.Data.DataTable dt) {
            this.InsertAsync(dt, null);
        }
        
        /// <remarks/>
        public void InsertAsync(System.Data.DataTable dt, object userState) {
            if ((this.InsertOperationCompleted == null)) {
                this.InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperationCompleted);
            }
            this.InvokeAsync("Insert", new object[] {
                        dt}, this.InsertOperationCompleted, userState);
        }
        
        private void OnInsertOperationCompleted(object arg) {
            if ((this.InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCompleted(this, new InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(System.Data.DataTable dt) {
            object[] results = this.Invoke("Update", new object[] {
                        dt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(System.Data.DataTable dt) {
            this.UpdateAsync(dt, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(System.Data.DataTable dt, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        dt}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(string[] primaryKeys, string[] parametersValues) {
            object[] results = this.Invoke("Delete", new object[] {
                        primaryKeys,
                        parametersValues});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string[] primaryKeys, string[] parametersValues) {
            this.DeleteAsync(primaryKeys, parametersValues, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string[] primaryKeys, string[] parametersValues, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        primaryKeys,
                        parametersValues}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAll() {
            object[] results = this.Invoke("SelectAll", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllAsync() {
            this.SelectAllAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllAsync(object userState) {
            if ((this.SelectAllOperationCompleted == null)) {
                this.SelectAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllOperationCompleted);
            }
            this.InvokeAsync("SelectAll", new object[0], this.SelectAllOperationCompleted, userState);
        }
        
        private void OnSelectAllOperationCompleted(object arg) {
            if ((this.SelectAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllCompleted(this, new SelectAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerDate() {
            object[] results = this.Invoke("GetServerDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerDateAsync() {
            this.GetServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetServerDateAsync(object userState) {
            if ((this.GetServerDateOperationCompleted == null)) {
                this.GetServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerDateOperationCompleted);
            }
            this.InvokeAsync("GetServerDate", new object[0], this.GetServerDateOperationCompleted, userState);
        }
        
        private void OnGetServerDateOperationCompleted(object arg) {
            if ((this.GetServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerDateCompleted(this, new GetServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectBatchesCompletedEventHandler(object sender, selectBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectKeyIdentifierCompletedEventHandler(object sender, selectKeyIdentifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectKeyIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectKeyIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectDEFormCompletedEventHandler(object sender, selectDEFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectDEFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectDEFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowBatchStartCompletedEventHandler(object sender, isAllowBatchStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowBatchStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowBatchStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowEditCompletedEventHandler(object sender, isAllowEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void startBatchCompletedEventHandler(object sender, startBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowUserEntryCompletedEventHandler(object sender, isAllowUserEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowUserEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowUserEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void sendForReviewCompletedEventHandler(object sender, sendForReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendForReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendForReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateStatusCompletedEventHandler(object sender, updateStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void saveBatchXMLCompletedEventHandler(object sender, saveBatchXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveBatchXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveBatchXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectBatchXMLCompletedEventHandler(object sender, selectBatchXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectBatchXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectBatchXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectBatchEphesoftXMLCompletedEventHandler(object sender, selectBatchEphesoftXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectBatchEphesoftXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectBatchEphesoftXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void saveShipperConsigneeInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectAlphaNumericKeyCompletedEventHandler(object sender, selectAlphaNumericKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectAlphaNumericKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectAlphaNumericKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectCustRefCompletedEventHandler(object sender, selectCustRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectCustRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectCustRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void auditTrailBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowQACompletedEventHandler(object sender, isAllowQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowUserQACompletedEventHandler(object sender, isAllowUserQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowUserQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowUserQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isAllowQAEditCompletedEventHandler(object sender, isAllowQAEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAllowQAEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAllowQAEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void startReviewCompletedEventHandler(object sender, startReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectQAConfigCompletedEventHandler(object sender, selectQAConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectQAConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectQAConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void completeReviewCompletedEventHandler(object sender, completeReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class completeReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal completeReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void graphDiffQAXMLCompletedEventHandler(object sender, graphDiffQAXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class graphDiffQAXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal graphDiffQAXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void graphDiffTrainerXMLCompletedEventHandler(object sender, graphDiffTrainerXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class graphDiffTrainerXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal graphDiffTrainerXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteObjectCompletedEventHandler(object sender, deleteObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertCompletedEventHandler(object sender, InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectAllCompletedEventHandler(object sender, SelectAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServerDateCompletedEventHandler(object sender, GetServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591